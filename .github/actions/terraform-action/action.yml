#.github/actions/teraform-actio.yml
name: 'Terraform CI'
description: Terraform to create infrastructure

inputs:
  gcp_project_id:
    description: "Gcp Project being targeted."
    default: "plucky-cargo-359113"
    required: true
  google_credentials:
    description: "...."
    required: true
  
runs:
  using: "composite"
  steps:
  # Checkout the repository to the GitHub Actions runner
      -
        name: Checkout
        uses: actions/checkout@v2

      -
        id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          credentials_json: ${{ inputs.google_credentials }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
        with:
          project_id: ${{ inputs.gcp_project_id }}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init
        shell: bash

    # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check
        shell: bash

    # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan
        shell: bash

      # On push to main, build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        shell: bash
